* single games
loadmap ./src/test/resources/maps/world_small/world_small.map
gameplayer -add R1 rand -add B1 bene -add A1 aggr -add C1 cheat
gameplayer -add R1 rand -add B1 bene -add A1 aggr
gameplayer -add R1 rand -add B1 bene
gameplayer -add R1 rand -add R2 rand
gameplayer -add H1 human -add R2 rand
gameplayer -add C1 cheat -add C2 cheat
maxrounds 10
assigncountries

loadgame d:\tmp\jx1.wz
tournament -M ./src/test/resources/maps/canada/canada.map -P benevolent, aggressive, random -G 5 -D 50
tournament -M ./src/test/resources/maps/canada/canada.map -P benevolent, aggressive, random, cheater -G 5 -D 50
tournament -M ./src/test/resources/maps/world_small/world_small.map -P benevolent, aggressive, random -G 5 -D 50

* tournaments
tournament -M ./src/test/resources/maps/world_small/world_small.map -P benevolent -G 1 -D 10
tournament -M ./src/test/resources/maps/world_small/world_small.map -P benevolent, aggressive -G 2 -D 25
tournament -M ./src/test/resources/maps/world_small/world_small.map, ./src/test/resources/maps/canada/canada.map -P benevolent, aggressive, random, cheater -G 5 -D 50

* maps:
loadmap ./src/test/resources/maps/world_small/world_small.map
loadmap ./src/test/resources/maps/canada/canada.map
loadmap ./src/test/resources/maps/usa8/usa8regions.map
loadmap ./src/test/resources/maps/solar/solar.map
loadmap ./src/test/resources/maps/conquest_maps/world_small_conquest.map
loadmap ./src/test/resources/maps/conquest_maps/Earth.map
loadmap ./src/test/resources/maps/conquest_maps/Europe.map
loadmap ./src/test/resources/maps/conquest_maps/USA.map

* players
gameplayer -add John -add Pouyan -add Nazanin
gameplayer -add H1 -add H2
gameplayer -add H1 -add B1 bene
gameplayer -add R1 aggr -add B1 bene
assigncountries

* map editor
editcontinent -add 1 Europe -add 2 Asia
editcountry -add UK 1 -add France 1 -add Spain 1 -add Germany 1 -add Italy 1 -add China 2 -add Japan 2
editneighbor -add UK France -add France UK -add France Spain -add Spain France -add France Germany -add Germany France -add Germany Italy 
editneighbor -add Italy Germany -add Germany China -add China Germany -add China Japan -add Japan China -add Japan Italy -add Italy Japan
savemap -d d:\tmp\xsmapdomination.map
loadmap d:\tmp\xsmapdomination.map
editmap d:\tmp\xsmapdomination.map
savemap -c d:\tmp\xsmapconquest.map
loadmap d:\tmp\xsmapconquest.map
editmap d:\tmp\xsmapconquest.map

editmap ./src/test/resources/maps/canada/canada.map
editmap ./src/test/resources/maps/conquest_maps/Earth.map




-----------------------------------------------------
SOEN 6441: Joey Paquet 

From Discord:

Q: "Random player deploys armies on a random country"
Here, is the country selected randomly from the countries owned by that player or randomly selected from any country in the map?
A: Owned by the player



-----------------------------------------------------
Q: loadmap/savemap should we choose the format based on the filename extension?
A: loadmap -> autodetect from the map file
A: savemap -> add parameter to command

Q: for player behaviour can we add a param to the gameplayer command? e.g. gameplayer -add player1 human -add player2 random
A: yes

Q: in single player mode: can we add a command in startup to limit the number of turns (like in tournament mode), especially when all players are non-human? e.g. maxturns 100
Q: should the single mode game limit the number of turns if all players are non-human?
A: yes. the game should be able to show a winner during a presentation.

S: tournament -> no human

Q: cheater mode, works directly on the map during issue_order?




-----------------------------------------------------
refactoring:

*) Refactor class names:
GamePlayController -> SingleGameController


*) remove unused variables:



*) rename methods:
setPlayer to cloneToPlayer


-------------
refactoring for build 3:

1) move all comand parsing into respective Order class (MAYBE - THINK ABOUT IT)
2) d_reinforcements + Utl.plural(d_reinforcements, " army", " armies")



GameEngine : startNewGame() -> startGame()


-------------
Unit Tests - Build 2

(1) map validation – including map and continents being connected graphs; 
test_validatemap_false -> MapTest
test_validatemap_false2 -> MapTest
test_validatemap_false3 -> MapTest

test_processMapEditorCommand_loadmap_invalid -> MapEditorControllerTest
test_validatemap_countries_not_connected_2() 
test_validatemap_countries_not_connected_1()
test_validatemap_fully_connected() 
test_processMapEditorCommand_loadmap_valid()

(2) reading an invalid map file;
test_processMapEditorCommand_loadmap_invalid -> MapEditorControllerTest 

3) validation of a correct startup phase
test_processGameStartupCommand_assigncountries_valid -> GameStartupControllerTest
test_processMapEditorCommand_loadmap_valid -> MapEditorControllerTest

4) calculation of number of reinforcement armies;
test_assignReinforcements_1 -> GamePlayTest
test_assignReinforcements_2 -> GamePlayTest

5) various test for the order validation upon execution
 + deploy: 
   test_deploy_1 -> OrderDeployTest
   test_processGamePlayCommand_deploy_invalid -> IssueOrderControllerTest 

 + advance:
   all tests -> OrderAdvanceTest
   test_processGamePlayCommand_advance_valid -> IssueOrderControllerTest
   test_processGamePlayCommand_advance_invalid -> IssueOrderControllerTest

 + bomb...
   all tests -> OrderBombTest
   test_processGamePlayCommand_bomb_valid -> test_processGamePlayCommand_advance_invalid 
   test_processGamePlayCommand_bomb_invalid -> test_processGamePlayCommand_advance_invalid 
 
6) saving/loading a game :
MapTest ->
test_loadmap_command_1
test_loadmap_command_2
test_saveMap_1
test_loadmap_domination_file_1
test_loadmap_conquest_file_1

MapEditorControllerTest ->
test_processCommand_savemap_valid_4 
test_processCommand_savemap_valid_3
test_processCommand_savemap_valid_2()
test_processCommand_savemap_valid_1() 


7) tournament mode

MapEditorControllerTest -> 
test_processCommand_tournament_invalid_2()
test_processCommand_tournament_invalid_1()
test_processCommand_tournament_valid_2()
test_processCommand_tournament_valid_1()



